#ifndef NAMEVALUE
#define NAMEVALUE

#include "flow_policy.h"
#include "../include/connector.h"
#include "../include/message_struct.h"
#include "../include/sec_entity.h"

static NAME2VALUE policy_type_valuelist[] = 
{
	{"AND",DISPATCH_POLICY_TYPE_AND},
	{"OR",DISPATCH_POLICY_TYPE_OR},
	{"EXCEPT",DISPATCH_POLICY_TYPE_EXCEPT},
	{"{",DISPATCH_POLICY_TYPE_LBRACE},
	{"}",DISPATCH_POLICY_TYPE_RBRACE},
	{"(",DISPATCH_POLICY_TYPE_LROUND},
	{")",DISPATCH_POLICY_TYPE_RROUND},
	{")AND",DISPATCH_POLICY_TYPE_RROUND|DISPATCH_POLICY_TYPE_AND},
	{")OR",DISPATCH_POLICY_TYPE_RROUND|DISPATCH_POLICY_TYPE_OR},
	{")EXCEPT",DISPATCH_POLICY_TYPE_RROUND|DISPATCH_POLICY_TYPE_EXCEPT},
	{NULL,0}


};

static NAME2VALUE match_entity_valuelist[] = 
{
	{"CONN",DISPATCH_MATCH_CONN},
	{"SENDER",DISPATCH_MATCH_SENDER},
	{"RECEIVER",DISPATCH_MATCH_RECEIVER},
	{"MESSAGE",DISPATCH_MATCH_MSG},
	{"MESSAGE_RECORD",DISPATCH_MATCH_MSG_RECORD},
	{"MESSAGE_EXPAND",DISPATCH_MATCH_MSG_EXPAND},
	{"PROC",DISPATCH_MATCH_PROC},
	{NULL,0}
};

static NAME2VALUE dispatch_conn_flag_valuelist[] = 
{
	{"type",DISPATCH_MATCH_CONN_TYPE},
	{"name",DISPATCH_MATCH_CONN_NAME},
	{"state",DISPATCH_MATCH_CONN_STATE},
	{NULL,0}
};

static NAME2VALUE dispatch_sender_flag_valuelist[] = 
{
	{"name",DISPATCH_MATCH_SENDER_NAME},
	{"type",DISPATCH_MATCH_SENDER_TYPE},
	{"uuid",DISPATCH_MATCH_SENDER_UUID},
	{NULL,0}
};

static NAME2VALUE dispatch_receiver_flag_valuelist[] = 
{
	{"name",DISPATCH_MATCH_RECEIVER_NAME},
	{"type",DISPATCH_MATCH_RECEIVER_TYPE},
	{"uuid",DISPATCH_MATCH_RECEIVER_UUID},
	{NULL,0}
};

static NAME2VALUE dispatch_msg_flag_valuelist[] = 
{
	{"type",DISPATCH_MATCH_MSG_TYPE},
	{"subtype",DISPATCH_MATCH_MSG_SUBTYPE},
	{"flag",DISPATCH_MATCH_MSG_FLAG},
	{NULL,0}
};
static NAME2VALUE dispatch_proc_flag_valuelist[] = 
{
	{"main_proc_type",DISPATCH_MATCH_MAIN_PROC_TYPE},
	{"main_proc_state",DISPATCH_MATCH_MAIN_PROC_STATE},
	{"sub_proc_type",DISPATCH_MATCH_SUB_PROC_TYPE},
	{"sub_proc_state",DISPATCH_MATCH_SUB_PROC_STATE},
	{NULL,0}
};
static NAME2VALUE connector_type_valuelist[] = 
{
	{"CONN_INVALID",CONN_INVALID},
	{"CONN_P2P",CONN_P2P},
	{"CONN_CLIENT",CONN_CLIENT},
	{"CONN_CHANNEL",CONN_CHANNEL},
	{"CONN_SERVER",CONN_SERVER},
	{NULL,0}
};
static NAME2VALUE connector_state_valuelist[] = 
{
	// server's state
	{"CONN_SERVER_INIT",CONN_SERVER_INIT},
	{"CONN_SERVER_READY",CONN_SERVER_READY},
	{"CONN_SERVER_LISTEN",CONN_SERVER_LISTEN},
	{"CONN_SERVER_SERVICE",CONN_SERVER_SERVICE},
	{"CONN_SERVER_SLEEP",CONN_SERVER_SLEEP},
	{"CONN_SERVER_SHUTDOWN",CONN_SERVER_SHUTDOWN},
	// client's state
	{"CONN_CLIENT_INIT",CONN_CLIENT_INIT},
	{"CONN_CLIENT_CONNECT",CONN_CLIENT_CONNECT},
	{"CONN_CLIENT_RESPONSE",CONN_CLIENT_RESPONSE},
	{"CONN_CLIENT_DISCONNECT",CONN_CLIENT_DISCONNECT},
	// channel's state
	{"CONN_CHANNEL_INIT",CONN_CHANNEL_INIT},
	{"CONN_CHANNEL_ACCEPT",CONN_CHANNEL_ACCEPT},
	{"CONN_CHANNEL_HANDSHAKE",CONN_CHANNEL_HANDSHAKE},
	{"CONN_CHANNEL_CLOSE",CONN_CHANNEL_CLOSE},
	{NULL,0}
};

static NAME2VALUE message_flag_valuelist[] = 
{
	{"MSG_FLAG_INTERNAL",MSG_FLAG_INTERNAL},
	{"MSG_FLAG_REMOTE",MSG_FLAG_REMOTE},
	{"MSG_FLAG_FORWARD",MSG_FLAG_FORWARD},
	{"MSG_FLAG_CRYPT",MSG_FLAG_CRYPT},
	{"MSG_FLAG_SIGN",MSG_FLAG_SIGN},
	{"MSG_FLAG_IDENTIFY",MSG_FLAG_IDENTIFY},
	{NULL,0}
};

static NAME2VALUE dispatch_target_type_valuelist[] = 
{
	{"TARGET_LOCAL",DISPATCH_TARGET_LOCAL},
	{"TARGET_SERVER",DISPATCH_TARGET_SERVER},
	{"TARGET_ENDPOINT",DISPATCH_TARGET_ENDPOINT},
	{"TARGET_REPLY",DISPATCH_TARGET_REPLY},
	{"TARGET_AUDIT",DISPATCH_TARGET_AUDIT},
	{"TARGET_EXCEPT",DISPATCH_TARGET_EXCEPT},
	{"TARGET_NULL",DISPATCH_TARGET_NULL},
	{NULL,0}
};

static NAME2VALUE base_running_state_valuelist[] = 
{
	{"LOCAL_INIT",PROC_LOCAL_INIT},
	{"LOCAL_LOADLIB",PROC_LOCAL_LOADLIB},
	{"LOCAL_BUILDCONN",PROC_LOCAL_BUILDCONN},
	{"LOCAL_READY",PROC_LOCAL_READY},
	{NULL,0}
};


#endif
